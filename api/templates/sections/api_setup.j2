<div class="api-config-section">
    <div class="api-credentials-section">
        <h3>API Credentials</h3>
        <p>Use these credentials to authenticate with the API endpoints. Your API secret should be kept secure.</p>
        <api-config jsum></api-config>
    </div>
    
    <div class="api-reference-section">
        <h3>API Reference</h3>
        <p>Below are the available classifiers and extractors with their IDs for use with the API endpoints.</p>
        <api-reference jsum></api-reference>
    </div>
    
    <div class="api-documentation">
        <h3>API Documentation</h3>
        <p>Use the following endpoints with HTTP Basic Authentication using your API key as username and API secret as password:</p>

        <div class="workflow-guidance" style="background-color: #e8f4fd; border: 1px solid #b8daff; border-radius: 4px; padding: 15px 15px 15px 25px; margin: 15px 0;">
            <h4>ðŸ“‹ Quick Start Workflow</h4>
            <p><strong>Choose your extraction approach:</strong></p>
            <ul style="margin: 10px 0;">
                <li><strong>ðŸ”„ Synchronous</strong> (GET endpoint): Best for testing, debugging, or simple integrations where you can wait for results</li>
                <li><strong>âš¡ Asynchronous</strong> (POST endpoint): Best for production systems, batch processing, or when handling multiple documents</li>
            </ul>
            <p><strong>Typical workflow:</strong></p>
            <ol style="margin: 10px 0;">
                <li>List available extractors/classifiers â†’ get IDs to use</li>
                <li>Upload a document â†’ get <code>file_id</code></li>
                <li>Run extraction (sync or async) â†’ get extraction results</li>
                <li>Download marked PDF (optional) â†’ get highlighted document</li>
                <li>Clean up files when done (optional)</li>
            </ol>
        </div>
        
        <div class="endpoint-docs">
            <h4>File Upload</h4>
            <div class="endpoint">
                <code>POST /service/file</code>
                <p>Upload a document file for processing. Returns file ID.</p>
                <pre>curl -X POST -u "your-api-key:your-api-secret" \
  -F "file=@document.pdf" \
  {{request.url_root}}service/file</pre>
            </div>

            <h4>Markdown Upload</h4>
            <div class="endpoint">
                <code>PUT /service/file/markdown</code>
                <p>Upload Markdown content as a document. The first line of the content is used as the filename.</p>

                <h5>Request Parameters:</h5>
                <ul>
                    <li><strong>content</strong> (required): The Markdown content to upload</li>
                </ul>

                <h5>Usage Notes:</h5>
                <ul>
                    <li>First line becomes the filename (markdown formatting like # is stripped)</li>
                    <li>Filename is automatically sanitized and given .md extension</li>
                    <li>Content is processed through the same extraction pipeline as file uploads</li>
                    <li>Returns document ID and generated filename</li>
                    <li>Compatible with SmolPageBot Chrome extension for easy web page capture</li>
                </ul>

                <h5>Example Request:</h5>
                <pre>curl -X PUT -u "your-api-key:your-api-secret" \
  -H "Content-Type: application/json" \
  -d '{
    "content": "# My Document Title\n\nThis is the content of my markdown document.\n\n## Section 1\n\nSome more content here."
  }' \
  {{request.url_root}}service/file/markdown</pre>

                <h5>Example Response:</h5>
                <pre>{
  "id": 124,
  "filename": "My-Document-Title.md"
}</pre>
            </div>
            
            <h4>List Available Classifiers</h4>
            <div class="endpoint">
                <code>GET /service/classifiers</code>
                <p>Get a list of all classifier sets available to your account. Use the returned IDs with the classification endpoint.</p>

                <h5>Response Format:</h5>
                <pre>[
  {
    "id": 1,
    "name": "Document Type Classifier"
  },
  {
    "id": 2,
    "name": "Invoice vs Receipt Classifier"
  }
]</pre>

                <h5>Example Request:</h5>
                <pre>curl -u "your-api-key:your-api-secret" \
  {{request.url_root}}service/classifiers</pre>
            </div>

            <h4>List Available Extractors</h4>
            <div class="endpoint">
                <code>GET /service/extractors</code>
                <p>Get a list of all extractors available to your account. Use the returned IDs with the extraction endpoints.</p>

                <h5>Response Format:</h5>
                <pre>[
  {
    "id": 1,
    "name": "Invoice Data Extractor"
  },
  {
    "id": 2,
    "name": "Contract Terms Extractor"
  },
  {
    "id": 3,
    "name": "Contact Information Extractor"
  }
]</pre>

                <h5>Example Request:</h5>
                <pre>curl -u "your-api-key:your-api-secret" \
  {{request.url_root}}service/extractors</pre>
            </div>

            <h4>Classification</h4>
            <div class="endpoint">
                <code>GET /service/classifier/{classifier_id}/{file_id}</code>
                <p>Classify a document using the specified classifier. Use the classifiers endpoint above to get available classifier IDs.</p>
                <pre>curl -u "your-api-key:your-api-secret" \
  {{request.url_root}}service/classifier/1/123</pre>
            </div>
            
            <h4>Extraction (Asynchronous)</h4>
            <div class="endpoint">
                <code>POST /service/extractor</code>
                <p>Extract information from a document using the specified extractor. This operation runs asynchronously in the background and returns results via webhook.</p>
                
                <h5>Request Parameters:</h5>
                <ul>
                    <li><strong>extractor_id</strong> (required): The ID of the extractor to use (get from extractors endpoint above)</li>
                    <li><strong>file_id</strong> (required): The ID of the uploaded document file</li>
                    <li><strong>web_hook</strong> (required): URL where extraction results will be sent via POST</li>
                    <li><strong>csrf_token</strong> (optional): CSRF protection token for webhook validation</li>
                </ul>
                
                <h5>Webhook Details:</h5>
                <p>When extraction completes, results are sent to your webhook URL via POST request:</p>
                <ul>
                    <li>The webhook receives the extracted data as JSON</li>
                    <li>Include a CSRF token to verify webhook authenticity</li>
                    <li>Ensure your webhook endpoint can handle POST requests</li>
                    <li>Webhook should return 200 status for successful receipt</li>
                </ul>
                
                <h5>CSRF Token Usage:</h5>
                <p>The CSRF token provides security verification for webhook calls:</p>
                <ul>
                    <li>Generate a unique token for each extraction request</li>
                    <li>Store the token to validate incoming webhook calls</li>
                    <li>The system will include this token in the webhook payload</li>
                    <li>Verify the token matches before processing webhook data</li>
                </ul>

                <h5>Marked PDF Generation:</h5>
                <p>When extraction finds data with citations, the system automatically creates a marked-up PDF:</p>
                <ul>
                    <li>Citations from extracted fields are highlighted in yellow</li>
                    <li>Non-PDF documents are automatically converted to PDF first</li>
                    <li>Each extractor creates its own marked version</li>
                    <li>Webhook payload includes <code>marked_pdf_available</code> flag</li>
                    <li>Use marked PDF endpoints to download highlighted versions</li>
                </ul>

                <h5>Example Request:</h5>
                <pre>curl -X POST -u "your-api-key:your-api-secret" \
  -H "Content-Type: application/json" \
  -d '{
    "extractor_id": 1, 
    "file_id": 123, 
    "web_hook": "https://your-domain.com/api/extraction-webhook", 
    "csrf_token": "abc123-secure-token-xyz789"
  }' \
  {{request.url_root}}service/extractor</pre>
  
                <h5>Example Webhook Payload:</h5>
                <p>Your webhook will receive a POST request similar to:</p>
                <pre>{
  "result": {
    "confidence": 1,
    "found": true,
    "explanation": "Explanation ...",
    "extracted_data": {
      "field_1": {
        "value": "value 1",
        "citation": ["Quote from document supporting field_1"]
      },
      "field_2": {
        "value": "value 2", 
        "citation": ["Quote 1", "Quote 2"]
      }
    }
  },
  "file_name": "document.pdf",
  "document_id": 123,
  "csrf_token": "abc123-secure-token-xyz789",
  "marked_pdf_available": true,
  "marked_pdf_path": "/path/to/document.marked.1.pdf"
}</pre>
            </div>

            <h4>Extraction (Synchronous)</h4>
            <div class="endpoint">
                <code>GET /service/extractor/{extractor_id}/{document_id}</code>
                <p>Extract information from a document using the specified extractor. This operation runs synchronously and returns results immediately in the response.</p>

                <h5>Path Parameters:</h5>
                <ul>
                    <li><strong>extractor_id</strong> (required): The ID of the extractor to use (get from extractors endpoint above)</li>
                    <li><strong>document_id</strong> (required): The ID of the uploaded document file</li>
                </ul>

                <h5>When to Use:</h5>
                <ul>
                    <li>Simple integrations that need immediate results</li>
                    <li>Interactive applications where users wait for results</li>
                    <li>Testing and debugging extractions</li>
                    <li>When webhook setup is not feasible</li>
                </ul>

                <h5>Comparison with Asynchronous Extraction:</h5>
                <table style="width: 100%; border-collapse: collapse; margin: 10px 0;">
                    <thead>
                        <tr style="background-color: #f5f5f5;">
                            <th style="border: 1px solid #ddd; padding: 8px; text-align: left;">Aspect</th>
                            <th style="border: 1px solid #ddd; padding: 8px; text-align: left;">Asynchronous (POST)</th>
                            <th style="border: 1px solid #ddd; padding: 8px; text-align: left;">Synchronous (GET)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Response</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">{"status": "started"}</td>
                            <td style="border: 1px solid #ddd; padding: 8px;">Complete results immediately</td>
                        </tr>
                        <tr style="background-color: #f9f9f9;">
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Webhook</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">Required</td>
                            <td style="border: 1px solid #ddd; padding: 8px;">Not needed</td>
                        </tr>
                        <tr>
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>Use Case</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">High volume, fire-and-forget</td>
                            <td style="border: 1px solid #ddd; padding: 8px;">Interactive, immediate results</td>
                        </tr>
                        <tr style="background-color: #f9f9f9;">
                            <td style="border: 1px solid #ddd; padding: 8px;"><strong>PDF Markup</strong></td>
                            <td style="border: 1px solid #ddd; padding: 8px;">âœ… Generated</td>
                            <td style="border: 1px solid #ddd; padding: 8px;">âœ… Generated</td>
                        </tr>
                    </tbody>
                </table>

                <h5>Example Request:</h5>
                <pre>curl -u "your-api-key:your-api-secret" \
  {{request.url_root}}service/extractor/1/123</pre>

                <h5>Example Response:</h5>
                <pre>{
  "extractor_id": 1,
  "document_id": 123,
  "file_name": "document.pdf",
  "extraction_result": {
    "confidence": 1,
    "found": true,
    "explanation": "Successfully extracted the following information...",
    "extracted_data": {
      "field_1": {
        "value": "extracted value 1",
        "citation": ["Quote from document supporting field_1"]
      },
      "field_2": {
        "value": "extracted value 2",
        "citation": ["Quote 1", "Quote 2"]
      }
    }
  },
  "marked_pdf_available": true,
  "marked_pdf_path": "/path/to/document.marked.1.pdf",
  "success": true
}</pre>

                <h5>Error Responses:</h5>
                <ul>
                    <li><strong>404</strong>: Extractor or document not found</li>
                    <li><strong>400</strong>: Document has no content available for extraction</li>
                    <li><strong>500</strong>: Extraction process failed</li>
                </ul>
            </div>

            <h4>Marked PDF Download</h4>
            <div class="endpoint">
                <code>GET /service/marked-pdf/{extractor_id}/{file_id}</code>
                <p>Download a marked-up PDF with highlighted citations from an extraction. The PDF contains visual highlights showing where extracted information was found in the original document.</p>
                
                <h5>Usage:</h5>
                <ul>
                    <li>Only available after successful extraction with citations</li>
                    <li>Automatically converts non-PDF documents to PDF before marking</li>
                    <li>Returns 404 if no marked version exists</li>
                    <li>Each extractor creates its own marked version</li>
                </ul>
                
                <h5>Example:</h5>
                <pre>curl -u "your-api-key:your-api-secret" \
  --output "marked_document.pdf" \
  {{request.url_root}}service/marked-pdf/1/123</pre>
            </div>
            
            <h4>Marked PDF Status</h4>
            <div class="endpoint">
                <code>GET /service/marked-pdf-status/{file_id}</code>
                <p>Check which marked PDF versions are available for a document across all your extractors.</p>
                
                <h5>Response Format:</h5>
                <pre>{
  "file_id": 123,
  "pdf_available": true,
  "marked_versions": [
    {
      "extractor_id": 1,
      "extractor_name": "Invoice Extractor",
      "file_size": 245760
    },
    {
      "extractor_id": 2, 
      "extractor_name": "Contract Extractor",
      "file_size": 238950
    }
  ],
  "total_marked_versions": 2
}</pre>
                
                <h5>Example:</h5>
                <pre>curl -u "your-api-key:your-api-secret" \
  {{request.url_root}}service/marked-pdf-status/123</pre>
            </div>
            
            <h4>File Cleanup</h4>
            <div class="endpoint">
                <code>DELETE /service/file/{file_id}</code>
                <p>Remove an uploaded file from the system. This also deletes any associated marked PDF versions.</p>
                <pre>curl -X DELETE -u "your-api-key:your-api-secret" \
  {{request.url_root}}service/file/123</pre>
            </div>
        </div>
    </div>
</div>